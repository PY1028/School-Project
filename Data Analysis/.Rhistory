scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) by Engine Displacement- Scatterplot") +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1.5))
#Scatter Plot 2; Size = Displ
df %>%
ggplot(aes(x = cty, y = hwy, size = displ)) +
geom_point(fill="blue", color="red") +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) by Engine Displacement- Scatterplot") +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1.5))
ggsave(filename = "~/Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 5/Scatter_Plot_HWY_CTY_DISPL2.png", plot = last_plot(),
units = "cm", width = 29.7, height = 21, dpi = 600)
diamonds.big %>%
filter(volume <= 1000) %>% # exclude diamonds with extreme volume value
ggplot(aes(x = carat, y = price, size = volume, color = cut)) +
geom_point(position = "jitter") +
facet_grid(color ~ clarity,
scales = "free",
labeller = "label_both")
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl)) +
geom_point()
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point()
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(cut),
scales = "free",
labeller = "label_both")
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl),
scales = "free",
labeller = "label_both")
xlab("City (MPG)") +
ylab("Highway (MPG)")
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl),
nrow = 5,
scales = "free",
labeller = "label_both")
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5) +
xlab("City (MPG)") +
ylab("Highway (MPG)")
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1.5))
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
help(mpg)
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = "label") +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = "") +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = label_both) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,10)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
new_labels <- c("e" = "Ethanol", "d" = "Diesel", "r" = "Regular", "p" = "Premium", "c" = "Compressed Natural Gas" )
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = new_labels) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,10)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
new_labels <- r("e" = "Ethanol", "d" = "Diesel", "r" = "Regular", "p" = "Premium", "c" = "Compressed Natural Gas" )
df['fl'][df['fl']== "e"]<- "Ethanol"
df['fl'][df['fl']== e]<- Ethanol
df['fl'][df['fl']== e]<- "Ethanol"
df['fl'][df['fl']== "e"]<- "Ethanol"
df$fl <- as.factor(df$fl)
df['fl'][df['fl']== "e"]<- "Ethanol"
df$fl <- as.factor(df$fl)
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,10)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
df %>%
mutate (mpg = replace(mpg, fl == "e", "Ethanol")) %>%
as.data.frame()
df %>%
mutate (mpg = replace(mpg, fl == e , Ethanol )) %>%
as.data.frame()
new_labels <- c("e" = "Ethanol", "d" = "Diesel", "r" = "Regular", "p" = "Premium", "c" = "Compressed Natural Gas" )
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = labeller(fl = new_labels)) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,10)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
ggsave(filename = "~/Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 5/Scatter_Plot_HWY_CTY_Row_Plots.png", plot = last_plot(),
units = "cm", width = 29.7, height = 21, dpi = 600)
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = labeller(fl = new_labels)) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,1)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
ggsave(filename = "~/Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 5/Scatter_Plot_HWY_CTY_Row_Plots.png", plot = last_plot(),
units = "cm", width = 29.7, height = 21, dpi = 600)
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = labeller(fl = new_labels)) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
ggsave(filename = "~/Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 5/Scatter_Plot_HWY_CTY_Row_Plots.png", plot = last_plot(),
units = "cm", width = 29.7, height = 21, dpi = 600)
df %>%
ggplot(aes(x = cty, y = hwy, color = cyl, shape = drv)) +
geom_point() +
facet_wrap(vars(fl), nrow = 5, labeller = labeller(fl = new_labels)) +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,60,10)) +
ggtitle("City VS Highway Mile per Gallon (MPG) based on Cylinder and Drive Type") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))
ggsave(filename = "~/Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 5/Scatter_Plot_HWY_CTY_Row_Plots.png", plot = last_plot(),
units = "cm", width = 29.7, height = 21, dpi = 600)
rm(list = ls())
graphics.off()
# Libraries
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("cowplot")
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
#display classes of each column
sapply(mpg, class)
df<- mpg
#convert all characters to factors
df[sapply(df, is.character)] <- lapply(df[sapply(df, is.character)],
as.factor)
str(df)
#Summary
summary(df)
#Convert Cyl to factor
df$cyl <- as.factor(df$cyl)
str(df$cyl)
#Scatter Plot 1; Color= Displ
df %>%
ggplot(aes(x = cty, y = hwy, color = displ)) +
geom_point(position = "jitter",
size = 3.0) +
scale_color_viridis_c(option = "viridis") +
xlab("City (MPG)") +
ylab("Highway (MPG)") +
scale_x_continuous(breaks = seq(0,50,5)) +
scale_y_continuous(breaks = seq(0,50,5)) +
ggtitle("City VS Highway Mile per Gallon (MPG) by Engine Displacement- Scatterplot") +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 14),
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1.5))
ggsave(filename = "~/Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 5/Scatter_Plot_HWY_CTY_DISPL.png", plot = last_plot(),
units = "cm", width = 29.7, height = 21, dpi = 600)
source("https://raw.githubusercontent.com/radiant-rstats/minicran/gh-pages/install.R")
rm(list = ls())
graphics.off()
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(readxl)
Student_Data <- read_excel("Documents/KUMC- Data Sci/Linear Regression 840/Data/Student Data.xlsx")
View(Student_Data)
df1 <- read_excel("Documents/KUMC- Data Sci/Linear Regression 840/Data/Student Data.xlsx")
m1 <- lm(GPA ~ M, data=df1)
summary(m1)
MSE <- summary(m1)$sigma^2 # Estimate of error variance, sigma^2
MSE
qt(0.95,38)
alpha <- 0.10 # Familywise alpha
m <- 2 # Two intervals
alpha.star <- alpha/m # Individual alpha by Bonferroni's adjustment
1-alpha.star
Ynew <- predict(m1, data.frame(M=60),
interval = "confidence",
level = 0.99)
Ynew
Yp <- predict(m1, data.frame(M=99),
interval = "confidence",
level = 0.99)
Yp
Y75 <- predict(m1, data.frame(M=75),
interval = "confidence",
level = 0.99)
Y75
Y75P <- predict(m1, data.frame (M=5), interval = "predict", level = 0.99)
Y75P
Y75P <- predict(m1, data.frame (M=75), interval = "predict", level = 0.99)
Y75P
install.packages("data.table")
library(data.table)
set.seed(34)
# standard data.frame from R base
mydf = data.frame(a = c("Paul", "Kim", "Nora", "Sue", "Paul", "Kim"),
b = c("A", "A", "B", "B", "B", "C"),
c = rnorm(2)); mydf
head(mydf)
sapply(mydf, class)
mytable = data.table(a = c("Paul", "Kim", "Nora", "Sue", "Paul", "Kim"),
b = c("A", "A", "B", "B", "B", "C"),
c = rnorm(2)); mytable
head(mytable)
sapply(mytable, class)
# checking the class
class(mydf); class(mytable)
mydf[3,]
mytable[3,]
# what is the default extract when using simple box brackets?
mydf[3]
mytable[3]
set.seed(34)
mytable = data.table(a = c("Paul", "Kim", "Nora", "Sue", "Paul", "Kim"),
b = c("A", "A", "B", "B", "B", "C"),
c = rnorm(2)); mytable
head(mytable)
sapply(mytable, class)
# rows
mydf[3,]
mytable[3,]
# what is the default extract when using simple box brackets?
mydf[3]
mytable[3]
# columns: extraction in different form, column or vector
mydf[3]; mydf[,3]
mytable[,3] #does not work
mytable[,c]
View(mytable)
mytable[,.(c)]
mydf[,c]
mytable[, list(c)]
mytable[,.(cname = c)] # same command but renaming the column
mytable[, sum(b == "B")] # how many rows with "B"?
library(ggplot2)
library(data.table)
newdiam = data.table(diamonds); class(newdiam)
newdiam
summary(newdiam)
newdiam[price>10000,.N]
newdiam[price>10000,.N, by = color]
newdiam[cut == "Ideal" & (color == "E" | color == "J")]
newdiam[order(price)]
newdiam[, .(price, cut)]
newdiam[, sum((x + y + z)>18)]
newdiam[(x + y + z)>18, .N]
newdiam[cut == "Ideal" | cut == "Premium", .(meanprice = mean(price)), by = cut] # keep it a list to name the output
# get the number of diamonds with a price >10000 and a cut of "Premium
newdiam[ price > 10000 & cut =="Premium", .N]
newdiam[, .N, price > 10000 & cut =="Premium"]
library(haven)
ALL_ID_Test_Master_database_cancer_2011_updated_April_20_no_deaths <- read_sav("Documents/Depression/ALL ID_Test_Master database cancer 2011 updated April 20 - no deaths.sav")
View(ALL_ID_Test_Master_database_cancer_2011_updated_April_20_no_deaths)
library(readr)
Depression_Cancer <- read_csv("Documents/Depression/Depression_Cancer.csv")
View(Depression_Cancer)
library(readr)
Algerian_forest_fires_dataset_UPDATE <- read_csv("Downloads/Algerian_forest_fires_dataset_UPDATE.csv")
View(Algerian_forest_fires_dataset_UPDATE)
Algerian_forest_fires_dataset_UPDATE <- read.csv2("~/Downloads/Algerian_forest_fires_dataset_UPDATE.csv", sep="", quote="'")
View(Algerian_forest_fires_dataset_UPDATE)
library(readr)
Algerian_forest_fires_dataset_UPDATE <- read_csv("Downloads/Algerian_forest_fires_dataset_UPDATE.csv")
View(Algerian_forest_fires_dataset_UPDATE)
df <- Algerian_forest_fires_dataset_UPDATE
View(df)
str(df)
df$FWI <- as.numeric(df$FWI)
hist(v,xlab = "FWI",col = "yellow",border = "blue")
hist(FWI,xlab = "FWI",col = "yellow",border = "blue")
hist(df$FWI,xlab = "FWI",col = "yellow",border = "blue")
dev.off()
hist(df$FWI,xlab = "FWI",col = "yellow",border = "blue")
summary(df)
df$DC <- as.numeric(df$DC)
summary(df$DC)
hist(df$DC,xlab = "Drought Index",col = "yellow",border = "blue")
df$RH <- as.numeric(df$RH)
hist(df$RH)
summary(df$RH)
df$ISI <- as.numeric(df$ISI)
summary(df$ISI)
hist(df$ISI)
library(haven)
Before_Merge_BMT_1_Only <- read_sav("Downloads/Before Merge_BMT_1_Only.sav")
View(Before_Merge_BMT_1_Only)
library(haven)
ALL_ID_Test_Master_database_cancer_2011_updated_April_20_no_deaths <- read_sav("Downloads/ALL ID_Test_Master database cancer 2011 updated April 20 - no deaths.sav")
View(ALL_ID_Test_Master_database_cancer_2011_updated_April_20_no_deaths)
df <- ALL_ID_Test_Master_database_cancer_2011_updated_April_20_no_deaths
hist(df$Total_ER_2011_13)
hist(df$Readmission_2011_13)
hist(df$visit_2011)
hist(df$hosp_visit_2011)
library(readr)
Algerian_forest_fires_dataset_UPDATE <- read_csv("Downloads/Algerian_forest_fires_dataset_UPDATE.csv")
View(Algerian_forest_fires_dataset_UPDATE)
dim()
df1 <- Algerian_forest_fires_dataset_UPDATE
rm(list = ls())
graphics.off()
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("dplyr")
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(readr)
Algerian_forest_fires_dataset_UPDATE <- read_csv("Downloads/Algerian_forest_fires_dataset_UPDATE.csv")
View(Algerian_forest_fires_dataset_UPDATE)
df <- Algerian_forest_fires_dataset_UPDATE
df1 <- df %>%
filter(Classes = "fire")
df1 <- df %>%
filter(Classes == "fire")
View(df1)
df1$FWI <- as.numeric(df1$FWI)
hist(df1$FWI)
sapply(df1, class)
#identify all character columns
chars <- sapply(df1, is.character)
#convert all character columns to numeric
df1[ , chars] <- as.data.frame(apply(df1[ , chars], 2, as.numeric))
#display classes of each column
sapply(df1, class)
df1$Classes <- as.character(df1$Classes)
summary(df1)
#Histogram independent variables
hist(df1$RH)
hist(df1$Ws)
hist(df1$FFMC)
hist(df1$Temperature)
hist(df1$DMC)
hist(df1$DC)
rm(list = ls())
graphics.off()
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
install.packages("tidyverse")
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
df <- read_csv("Downloads/heart_failure_clinical_records_dataset.csv")
View(df)
str(df)
#Response varaible
hist(df$ejection_fraction)
#Nummeric independent variables
hist(df$creatinine_phosphokinase)
hist(df$platelets)
hist(df$serum_creatinine)
hist(df$serum_sodium)
#option. Conduct analysis in Diabetic Patients only
dfDM <- df %>%
filter (diabetes == '1')
#Response varaible
hist(dfDM$ejection_fraction)
#Nummeric independent variables
hist(dfDM$creatinine_phosphokinase)
hist(dfDM$platelets)
hist(dfDM$serum_creatinine)
hist(dfDM$serum_sodium)
gc()
shiny::runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/App-1/App-1')
library(shiny); runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/DEMO2/DEMO2.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/DEMO2/DEMO2.R')
library(shiny); runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/CHF/HF.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/CHF/HF.R')
source('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/CHF/HF.R')
source('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/CHF/HF.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/CHF/HF.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
library(shiny); runApp('Documents/KUMC- Data Sci/Data Visualization 824 /Visualization Module 12_Project/Data Analysis/Data Analysis and Plots.R')
library(shiny); runApp('Data Analysis and Plots.R')
